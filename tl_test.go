package signedattestation

import (
	"crypto/x509"
	"encoding/pem"
	"testing"
)

const (
	TestEntry   = `{"body":"","integratedTime":1704206702,"logID":"c0d23d6ad406973f9559f3ba2d1ca01f84147d8ffc5b8445c224f98b9591801d","logIndex":60852956,"verification":{"inclusionProof":{"checkpoint":"rekor.sigstore.dev - 2605736670972794746\n56689528\nnLjJYCC7ReuW2CjlnMaz6I9KXw69aoIysTq931HzHkA=\nTimestamp: 1704206702570843692\n\n— rekor.sigstore.dev wNI9ajBFAiEA1As6FCyktbeBN7XPgGwE3KhBlBroSgMT6NlxEf7KwYcCIAtWkFZCBgSqcZ3/tI3irhxq0AJDktVGtyv6iIyXj6uy\n","hashes":["e57ea75af056b8cc6743116d61425e2451ee22bc12a66f234d9fa404928b1781","59fec783b91b20ae17987101685fd0381d0d08ff5fbada98b083ef020c296fd3","fd08937fe87c1b35e13884525d154f83fa2e4831161d545c11449581f4cb29ae","212b7c26cbe0d6f08a01b52f2e8b34e904966a30d4db5f4aa6883ba3bcee1370","fff448c868bc33ef0f8ee0617688bd67118e9aa0a360263d4afccea228d970e3","241015a19936695c356b9a80ebb877e940f553dfa1881468973d935cbdcc6fdb","686cccb511922b535286bc1ec07ba5889f8857de041c75f98bab316413c01007","afb2d0b258a6ad6a22f07decfa539500970d1abb0dc9a6b2882aaa7b0faad780","a1676ce47042c78df3fb8591a5f87d6c57907281f371e6069a460d09ed661d84","7940acf1d34fea9052d8af95ab3e4c0a5da981529238ad691d25800b61f210d4","2c4d25ba59aa573ab2c79c2d3cd9e1d74789b10632432724d63112ce50b44874","98c486feb5d87092a78a46c4b5be04868654900affc2e86ffb20074dc73a883a","6969c49bd73f19bf28a5eaeabd331ddd60502defb2cd3d96e17b741c80adec6c"],"logIndex":56689525,"rootHash":"9cb8c96020bb45eb96d828e59cc6b3e88f4a5f0ebd6a8232b13abddf51f31e40","treeSize":56689528},"signedEntryTimestamp":"MEUCIQDK57YbGwI7OFOB9uOfMm3LT2AA6z8pNY64pptEID8a3wIgOGotvDwzdDmHopRifhPKlDu7xJYYy/Ib5sSaPjOW0dU="}}`
	TestPayload = `DSSEv1 28 application/vnd.in-toto+json 123 {"_type":"https://in-toto.io/Statement/v0.1","predicateType":"https://spdx.dev/Document","subject":null,"predicate":"test"}`
	TestCert    = "-----BEGIN CERTIFICATE-----\nMIIa1DCCGnqgAwIBAgIBATAKBggqhkjOPQQDAjAVMRMwEQYDVQQDEwoxMjM0NTY3\nODkwMB4XDTI0MDEwMjE0NDUwMloXDTI1MDEwMTE0NDUwMlowFTETMBEGA1UEAxMK\nMTIzNDU2Nzg5MDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEpbnTSA5MPvkL+R\n8wmuzm8ixCFWKeeOSEdifMM3kzICgF7GNXPbIaaV1eB/m0SRurYuhYNuYLw7WcQl\ngisVXgijghm5MIIZtTAOBgNVHQ8BAf8EBAMCB4AwEwYDVR0lBAwwCgYIKwYBBQUH\nAwMwDAYDVR0TAQH/BAIwADCCGWcGA1UdDgSCGV4EghlaeyJwYXlsb2FkIjoiZXlK\naGRXUWlPbHNpWVd4emIxOXRaU0pkTENKbGJXRnBiQ0k2SW1GeWRHaDFjaTVoWVhK\na2RtRnlhMEJsZUdGdGNHeGxMbU52YlNJc0ltVjRjQ0k2TVRjd05ESTVNekV3TVN3\naWFXRjBJam94TnpBME1qQTJOekF4TENKcGMzTWlPaUp0WlNJc0ltNXZibU5sSWpv\naVRHODNjRFpLVVhsWWFIZFZhVkJOV0d0TmRYaERibk5PVm5CWE9WbHZOamRUY1Vw\nWldHRktVV1ZmV1NJc0luTjFZaUk2SWpFeU16UTFOamM0T1RBaWZRIiwic2lnbmF0\ndXJlcyI6W3siaGVhZGVyIjp7ImprdCI6ImFGWllhRW90VUV0bVdUQmZhMWxsTVhW\nZlptRlJOR1pEWmpZMlMwOXBYM0phWWpaRFZqRnBTalJZVVEiLCJzaWdfdHlwZSI6\nIm9pZGNfZ3EifSwicHJvdGVjdGVkIjoiZXlKaGJHY2lPaUpTVXpJMU5pSXNJblI1\nY0NJNklrcFhWQ0o5Iiwic2lnbmF0dXJlIjoiSnNlMXZmMDlkakN3SE1VeE52dWVG\ncTh4NE0wMDhkVjZnQjRHcDhHajZyMFhGUFo4WEpYUHRweWZ4clJnN0lpSFA3TFUy\nTWt5VXNwV2dkQ0p0NDdKQ09DRmpVbW83Z0pNb1EtbTdUQXZCaEdWNlhheHB6ZTVq\nczkzaGN0VUo4UTlvS2FER1NWMW9YWnE5dTE2WGlwYmxObUJTRXFUcmxCR1h4Z2xq\ndkwwZ1ZSbFlaTUtaTjJwVWNzTV9ZdXV2VFd0SGFJRzhSclJWQkJfenpKa0daQnR3\nX3VZQlNVMl85Z1BrVHExcE5sR0tIa1I3d1h1b3pXWWt4UFh5QVRtZWhtS1NQS2oy\ncUdTeGYtVVVkUWVFeDRkTmVhNnJoVTdxdEpBUUVVRUJDYlRWTWgzbDBqeWo1cF9I\ncm9oRkZPOXY1V29JLXd2NEVUYjBhLUJjSmw3NjcwSWtTWEtEUmNkSV9xaTZqNElB\nbDNTcWtSTFVqQlR0VUZ4bkJEZU5obUZDWVlnbHNSU2J2QWdNNTBkMlhRUDVUZzU2\nckZ3V0s1cVF3OW5YRWJEZjVJUUwzM2sxZFJTLVRfc2RTZkxsc19MUm5ZbXd0d3BC\nb29icE1Mazg0cVJ3UFhjbVlFTXdzb3BDbEpHRWNTMDkySHV2ZnI1cHo3S2FQQXIt\nSXlGX0VSS0NMcy1BOFA3MURaSVNlZEJhUV8tTjZMeW1DbnJrTmRPRy16dnhGQTFu\nb1hFUWFaRHEyLWI3ZFY2bkpYanlrdnhGRi10OWdlbHF2eE9Mb1RBeEhGNV9nNlRD\nZ3Q3ZzZfYnQ0OEpJMkFkd0hjV0VqdFlmV0RPSWRHdDJDdnpTbUFqUmNwQnIyRU11\nNWFtZXRMSWhFMGtzblQ4RjBORzhkZ25wMGtBVWc3UlF3eXE1UWt0X2VoT0piUkNE\nRE92ckhmanhISDFBME1JeUFPZGZHekIzSmtmZnY2cGxwZWZEcTdtWWhXR016R3Jr\nUWN5ODJPN2ozLWdMZFpaTmVwYi1QekdhSk5tOVFHTlVJVDhYMVlWTjllWnIxTWVE\nS2dCeDVmbmtDLXVUODlvR3hFR1EwOTlCSXZBTEhMeVE1MzdGOFNCWkZPTEIyTGJr\neFJ1R21sZ1JwN2NPTzVQdkV5dnYyandraHQyMzhMU2hLRGdzXzVBeXRpWjAwQlpx\nakNPWFZGZEY0VnpOSWIyWjYwSkh3N0s2SVJ2MkZsWldJSVFwaE1CVDBXOUlxQVB3\nalN0em5mYkpCc1JmRnF6RjI5RDg5S1YzX2VxZkRrZTk4Mi16eTRza1FzdDE1ZWty\ncE1TdlhaTlMzYWRud3UwZmhSUDF2dm9PZERNaWdMMkFnVEVmQTVZZDZ4blpSVVU0\naTNkejZZTTFhNjlUakFMRmRSQlRkeFowdEo4YW1nR1Rqalk4QWtublVFdnFvYjBX\nUnBnOU1YWkFneDJYMmVXX05LSmlwY2hUZXRpQWFJb2lCRVk5T0tTNVpZaTZQd0FW\nNDFqbDhVYlBCX1lhNzdiYWJZcndfeUo0VmlOeGhUZV9Fel9UWFBjbmtmeWJ6R25B\nUnRFbXlaQ1RaY3MySXBhbVRDeFo1SE9WZGY1eVZsWFp6NGhaZXBtS3g2X0x1bHcy\nc0p2T3FyNkxwTzRMM2lvMXJCQXFVbGoxR3hudzEzYlVYRjl2RDZBaW9rbHpyVlRR\nNjVLWVBQak5QWmpyRGNTVHV4S0kyUWE3TjRBa1JMZUF5ZndlVS1La2FJTTI0cmZj\nbGJXUlJhblhrWEc0NDB6azJmN0hzbmV6MXBfWGFZdzhlZ014eUlBeDE0QjJHb2JD\nRU8xWWlDMkJBV3ZsbGJBRmJDbGdxTFJvT3JrZXFsN2lMNzVzMXBRdDdnTHU3Wk9l\nam9jM2xjby0tSngyYTBnaGE3bTlwRzlORDNxVHRuS0x2aEp4NEw1SjItS0I0TXI4\nLWVaUWNKcXNwakNNR3AtMV9FeHZJUTR5bk5zQUdHZ0JnVUdMVXFPZ1o1c0Ryc1g3\nM1NKUnl4THVvcVFYVHZlZS0tcWxWckJacnBMRzU4MkJBSzJLWUlod3FGWThqZEl1\neHFFaUQwQVNMR0NOYm9hMHdXUkdqYzlNeDZwa25qQ1ZwM3hra0xHVFhNeF9CWDI0\nV2MyMXlpaUc2ejlTVTBsXzFiNnJ0SF8wSE1ZbHlXYUowWW1JamhqLU1FaVUyalk0\nMHhvVkpNdXBwSDZmcGQwVU1iWGEyREJBeWwycjdsS1lsRlh0cmhTZEhXbXNIU1ZH\nbi1Cems5RmsyekE4SThqeHpmLTB1RGxXczB4a09nNV9ucVBTcEp1S3d6cUhSTmRC\nYkVJT0FMeXJYTU8xMWdCVGZCbzFTSGQ2YnVIUE9GdGkxMVZWR19RWTRpWW0tdUZQ\nd1VycWN0ZHVvX3JZQ2o4WWVSVlE1cXNmbkFZaUg3TWJiQXREZ0tpZDBtZjF6Q0Fp\nWE02WkQ1RHdyMFAwTGxFdUhteWxSX2FhTDROSmQ0X3hWVk9JcmVMYjBGd2p3cjh1\nVnNYNEx3NUxqU2pUb1hLMnpCcnBkMkU2cW1hWjVxODl4TG9VUDJvMVlSQWtqQ0Fl\nRkJaTVROekFVWUJ3RHI4ZUxJcDgtejdxU1hZVjYyeWw2a3diZDlYZGhCT05KUjBH\nZ09mNzNvYW5rNmpwNnd1SDBxb24yMmp5cnRETGtWR2ZTYS0wR0xHTXZGOVBWczJN\nNUVQQTdKSnVEZDVJQlFhTHFNa3oybmhCY0U4ZVNhX2dHQWlKaloxSUl4cEZPeTRn\nTGJQRXJZMlZzOE5DdUU4TGZSbzVQQ1MzS1NwY1UwVjVJM3NZRF9lMkFXcFNfWkVo\nd0cza1BRTEk2cWN5TTZra0lzUWhJS1JpbUNZRzVXaXN1ZzhZUU5CVHNOc3FnTEl4\nWHloMWYxempmS3BNb2RQcHk5TjA1UlNjUTRYM24tWXhsWXVGb2FmQU9RZmhnd2JX\nSlhuYWhxWEZvVm9fY0g1V2xOS01paG9LVFNqa2RyMnRZdTFJb19hUjVrRkNKN0k5\nRzhpRWFrZnI1VVNzUWN2a0Z5Z1QxbXRBWl9qZm1YOXhPZk93b2xYVG1GX0pTQzZV\nNTl6QWZsN0s0NkMza2hSM3RmSGo1ZHNFWGZ3VzdkX25VQW1seC1OYUVEQ29Vajg0\nT2RmNDRjQTRDNXV2cV91alRiLUNCOFoyTkJuMkYwU1JsdEl2TGdnbkdwcHdPN0hB\nQ3NGemtlOW1SZERXNC1RZDJ2UEZ0SkVtZTFKMk5QV3d3Z1NPQkI3Sm1EZHVWbnlm\nT2dUaW02RDdXaUt0R1o3Z0tXdU9SMklpR0RWbm5lS3NzQXd1NnJUMGE0bkpKUDU0\naWlFYzBCdWZ1MVdQYUYwaHVfMHM0bUxSWGI4RGFLRWtJRUdDc01YZnMzWVJSanlB\naFN0eW5iZFBES08tYkpKRXNibWtwZUxIdkhmMG5HWTJ3T0VudlROUGtxRExOVDly\nYjVxeGtzdDhNemRJaTIyYkNKNW9iaXc4UTRWcjhqUldFTHU0akFsRWl2S0xuRjVT\nNmF5R216Rlh2NkNhWGQyak5NUmFmei13ejhndWdWLThCN09oSTRjZUc3eXEwY29V\ndnAxQnhpY256MDI2aXdmdlVTUDdBQktOb2dTY1NrZDRmR3VOM29oTGttWG1xa2ZY\nZnhOcEUxbmttVnNhbkdOa0tMbkUtUGUzQVRBLWpJcU5VSV9PanlPZzN6bGdqa05l\nY1hFYXA4Y3ZLRWlYaUdMZmZ2X21tYjZ1eDNGQWNZaWxFbmlGVWNOM0liTld1V1Ew\nMVdDZFpRWWZxODh0bEExN0FQR2Y2ZlVhejhKWnJ6VDREMkZzUWdGZk9ZcWtJbWx6\nWnlJcEVRbm1rZzB0NTZ1U0ltSGV2UXRTeE1QZGRmakdkalhxNGFZNEszU21FbDJa\nMEJaNFQ1alJWTnNpcjREdjBLUUJBQ19WdTA1QXVrWjg5enZzTWdBa0ZEUlBXTE43\nOGhOYUU4V2NFTlJLVjVwcnFZYXM5a0dlUkg4M1JKMmhWTXRMSjVIeUJzcTg5alF0\neW5Va09nWW1JNVlHM19IaEpYMjhqMlFtclh0dWZ4Q3YwWFlhU0gzNUNtQm0tMncx\nbEtVLVdCSEhDVWVYek5KeXczUEdYS1FGWXp0TWhVTWF5eW55QWZ6X05ValZkR0g0\nU3dfRzhCeGVadHgzNXQ5N2lVSHZXdXZ0UEVPdUxNeWZhcVZpMkhfNFlEMGYwSWpO\nWEZaR3NmRkxNSVZ3YXpzaVU3aWRxbzNIZ01GWUw0ejhsZWhmcVVxbFRrUk5ETl9t\nNnRyMmI5TUVXaWF6UFI0Tk1Ic2ItVk9MRzR3ZlRPaU5xYVJjYzZ6N1dCUFhOalZK\nRWJ5cnRjMjB6X3pQWGJzOW1ISkhZRHNIcjdsbXJLX05sS1RCSzRGQlNnTlY2X3o2\nYWpRaWZZdjlDZC03NlhsdVptTm56R0VEeHFhTGFpZjRMbUlWY0w0X216eFZub3ha\na0xDMXlOVGdhbzhZYWlQU1FNa3gxLWROVjlfbHczZVNReEVaY3BjVHozS2t6dVBi\nU1ktN0p1T1RVLUxjZlQyUkZKQ2lybm1JaXNuVzRXVk1XczNYMkJmLXpJSjN0U19W\nQUpzMXlzaHBiSDRYbS1neWlrSHpzbFU0cjhFU21SRkVETEl2aGlTYzlFaEdSNl9s\nNVBKeXdlLVNLVGJPNW9MbTBvM2h6ZC1hX1M0RWt0NjJpOHBRdTBiZFBSVG4tX1dk\nZ0ppT19ycmE5dDdNMHBpWGhoRGJPcEROUFdkaV92OG5tVHRMRW0yUVptekdQdHhZ\nYmRDU1l2U3drcGRvMmg4Zkcxbk1VSG9EU2pVbVhBblpmcktpckp4T2l5ZW9DY3I4\nLVBvUnBteEpWbkRoaUJHMGYwT1BzYzN3bXZzYm5rNVhza2hJUks3U2tPOTlYVlVX\nTUVwSlRCSWoxMVdYMWpvek9TaFNkcVpBNUEwM2FOakEtdS1qNHMzQjRDTVVmaGMz\nS0ZscElqczJPOGoxSXZyWkhsUnp6bDJEWFN5dEc3eDByQXAtTFFhMmFjbVBhYkYx\nZFZmR195RGZEZEwxSW5FSGNsZlBWN3JrVFJCck0yN1ZxTngtRzdERnktbUlSZndz\ndzB5TEI2MXVtMGNlT2I4U2dMWk54OUM1dmhnNmhuZEg2V2Y5T2xNOTlhSktWcG5O\nUkxYM1ZXbjlwaHlDOG1vMDFHUUJFcExKcl9pWlJpZ1VBVlJDa2VHUldjVWlXbWMt\nV2tZMWtwUjlzOGVfRXhsRldRVDBZdmdmaExoR3RWeXZFc3ZzWW4zZnlWazdPQUls\nVlZlSm5YZE9YS08wVU9hcExqUnVIY290R2UzblljMVBuMWdaM2FDMS05aEdCM0Vu\nZEhyN05JLTVITzIwdG1COUVJMWRSVkhfQk1iYTYzYmQ4NlBvdmUxVXZLOTF3alNq\nOXNvbjNfN2xXYmxuTk5uODlJZUNncGtQM2hmczhpSkJiMS11dXUzWGswWC00UzVP\naXJXaTZXVDNXRS1wTW9wbC1NQkd0enFJY1BENmZNSkNQT3pQXzBUNHFmblFWaGk1\nUlNmTTl6YnBUZV9hSS1SMnROOWpTTTFUdVBnWHdFRmJMSmtlZzMyVkl3UGQxQm55\nb3Nuc2dTRUtVRmpRWmlYQnZuRndDVjU2YzZPVWo4YmhjNlE5V1BUV1h3RTIyUEpy\nU1dXSmFYdWlCOTNqVS1mQVJRamdCTUNiOFpuUnUySndEa1BaalRrTDRiUjZUMFpQ\nbVhSUHJjdTVPX2dFVGFMY1N0VUdKUy1iaHJJWk5IQWJfcXgtQTI2WmdfQXJIZnd3\nbDZESTFJRGs5LVQ3anZ3V29VaFc1X1pCWFg5bzlXRURvajM4Wk1ZNDVwbVFsMkg4\nbU40RWE3dkFiYlJTaHZ0M09BWlFkVnFLMXphYU1iSGNhNEh1RWNqS0hvVXNINVB4\nUThvZjRIb0VURWdYQ1c0ZkczMzlJemNUcVNTbnhrOUxPVzFYekFCOTBOMUNiQTE1\nT1FlbnJCX0pxS2tycXJFcUtMNVN5R1Q0T1FzajJHY2tXNFczNEhwQmdmdGhRWXI0\nZVd0aE9OZ0pXQm52LUNIeWpDc1Z1Qm9XLUQxYS05VHBhdzJ0LTNTeDZWWi1zenlF\ndjZRQ2N2QlJzeWVkWkxid3FoWE5Fb3NXTlVkeUkwLVIyWUk3WFNMbHJiUjBzUzYx\nU1hPSkR1U1FiUHM5eVA2RGg2NWJaaGJQcUZLMU1IaVN0bG9QZ3FFU2lsNUZld0Nv\ndk4tS0tfVkZRdkxVcVpHTTFLNDBtRnRVWTVBekZnV01nMFZZYkpXXzBERGRaLWZh\nWVNSV0xxaW5xa3ZfX2FlRE1TT2J2QTAwMEJkaWdJVUtaZ1VjbE1IbGFJVjYycHNT\nQkZ1MmhOU1ZvQ2VTYVAzYVdCQkRfZE9YR1RmV1dOVWFGMmt2YmZod01qbl9La0Ji\nX2RTVWs1VnBVMTF4Y1k3T3htc013dVZfZDRPSVFMUUw2X2QzMUQ5YUQ5dE1YVzF4\nRXBsZVRiT0JCOFZQOFZrTVZpUjJJNFBlY28xai05azAwb05PeFFmVG83Y2d5TDJr\nbzJSWG9QMUlaMEhGRjN4MEN3Y1lOM0x4aHNGYU5BS0R6aDVZRGFOc1pEanZlWTVF\nSEZsbTZPQnk4Y3ZhdlRsa1k1anFmR01MbkRlVm1NUDVuRmFNb0JacTlSVk93aFhu\nVklUaDk1NlBpN0Y0dzhiSGtEYTZDaEhuT1FLeENmN05sM2xYekZ3SXV5ckVtLVZ2\nQVVsQWNSMDFMUEwzRVcwcThBMmRHYmRoaTRhS3RUSDJDQ2ZlZ0lpMlRRRVdhYmhv\nc2FzcVZadkNpaDNOZGsxYzVGTVVzcF9PdE5BR2RXODZXQVUtTU1ZQ3dNR1FiY3Vz\nbnA0RmVPZG1hSzd2VGNjUWNyTnhYWENFRElRajY5cmdoRVpTRzVjZU9hWEttTGdT\nV05RQUhnUU1mSXh5MWRPd3diSU1QM2dQQ0lNbkhKQVpYdXdPUEczRFU3Yk5aaEZ1\nS0VqT3hYTlk1WEZreVdZV1VIOUVTenlISHFoSnlwM05JSWE5MlgtaGl4Zm1sQk9Z\nVnJnbnU4bFRsVDBGSndTTkpKb1cwMXNFQXNXQmo4Tl9PeGplejUtVXZidmtVaDRQ\najVqalZBdEdXMkZfRzdPa3FTRVpkaWZkNWVmVldVa1VlSTBiWUNaRFByQkdJNmMy\nMkhPUFFyV2NpMHRzWm9mLVFJVDIzY3NaUFA0dTRBekdJUG1rT25veE5nZEV1bDBr\nWWhxSUs4THQ4SU4ifSx7ImhlYWRlciI6eyJzaWdfdHlwZSI6ImNpYyJ9LCJwcm90\nZWN0ZWQiOiJleUpoYkdjaU9pSkZVekkxTmlJc0ltRjBkQ0k2SW1FNVltSm1NakU0\nTVRJek1XUTROVEk1WXpjek56SmlZemd5WVRrMU5qaGlNR014WmpFMU4yTmpOek0y\nWmpRd1pUWTBaV0l5T1RnME9URTVPVEUxWWpNaUxDSnllaUk2SW1ZME1tSTJaV1l4\nWVdSak9EbGxOREpoTVRJM1lqWXpNREF5WmpNeU1tUTFNemcyTmpjM016QXlOVGsx\nT0RZNE1HSTJZMkkwTXpjNE5HVmhaalV3T1RjaUxDSjFjR3NpT25zaVlXeG5Jam9p\nUlZNeU5UWWlMQ0pqY25ZaU9pSlFMVEkxTmlJc0ltdDBlU0k2SWtWRElpd2llQ0k2\nSWxOc2RXUk9TVVJyZHkwdFVYWTFTSHBEWVRkUFlubE1SVWxXV1hBMU5EVkpVakpL\nT0hkNlpWUk5aMGtpTENKNUlqb2laMFkzUjA1WVVHSkpZV0ZXTVdWQ1gyMHdVMUox\nY2xsMWFGbE9kVmxNZHpkWFkxRnNaMmx6Vmxoblp5SjlmUSIsInNpZ25hdHVyZSI6\nIjc2aEJWY1BUd0VITmdCRzdQN21vTzBtN0pIanFIc1BVLVlqVEx2VUlaWWU4ZUkw\nd056WkZfSDJVQ1JVZWdyWS1nWDRGMWhaNlRERXctXzEyeldiYndnIn1dfTAVBgNV\nHREEDjAMggoxMjM0NTY3ODkwMAoGCCqGSM49BAMCA0gAMEUCIQDO2ywO4raTHkMM\njic5oAV3YLtetTUjfCgYfWETEr5jVgIgNZc1sIOn79MsnTEntoF88KwjmK3G76Iw\ngXsfcNxDBK0=\n-----END CERTIFICATE-----"
)

func TestVerifyEntryPayload(t *testing.T) {
	tl := &RekorTL{}
	p, _ := pem.Decode([]byte(TestCert))
	result, err := x509.ParseCertificate(p.Bytes)
	if err != nil {
		t.Fatal(err)
	}
	err = tl.VerifyEntryPayload([]byte(TestEntry), []byte(TestPayload), result.SubjectKeyId)
	if err != nil {
		t.Fatal(err)
	}
}
